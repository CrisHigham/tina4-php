#!/usr/bin/env php
<?php
$replacePath = $argv[0]; //used to figure out where we're running
global $rootPath;

foreach (get_included_files() as $id => $file) {
    if (strpos($file, "vendor".DIRECTORY_SEPARATOR."autoload.php")) {
        $rootPath = str_ireplace("vendor".DIRECTORY_SEPARATOR."autoload.php", "", $file);
        break;
    }
}

if (empty($rootPath)) {
    $rootPath = str_replace("vendor".DIRECTORY_SEPARATOR."andrevanzuydam".DIRECTORY_SEPARATOR."tina4php".DIRECTORY_SEPARATOR."bin".DIRECTORY_SEPARATOR."tina4", "", __FILE__);
    $rootPath = str_replace("bin".DIRECTORY_SEPARATOR."tina4", "", $rootPath);
}

require_once "{$rootPath}vendor/autoload.php";
define("TINA4_SUPPRESS", true);


if (file_exists($rootPath  . "index.php")) {
    include $rootPath  . "index.php";
}

function writeline($output): void
{
    echo $output . "\n";
}

function write($output): void
{
    echo $output;
}





$menus[] = ["id" => 1, "name" => "initialize", "description" => "Create index.php", "menuCode" => static function ($index, $input) {
    global $rootPath;
    if ($input === "0") { //Menu Option 0 - Exit
        return ["index" => 0, "prompt" => ""];
    }
    switch ($index) {
        case 1:
            if ($input === "" || strtolower($input) === "y") {
                if (!file_exists($rootPath . DIRECTORY_SEPARATOR . "index.php")) {
                    $nextIndex = 0;
                    $prompt = "";
                    $indexContent = '<?php' . PHP_EOL . 'require_once "./vendor/autoload.php";' . PHP_EOL . '$config = new \Tina4\Config();' . PHP_EOL . 'echo new \Tina4\Tina4Php($config);';
                    file_put_contents($rootPath . DIRECTORY_SEPARATOR . "index.php", $indexContent);
                } else {
                    $nextIndex = 0;
                    $prompt = "";
                    write("index.php file already exists, please make a backup of it or remove it to try again");
                    readline();
                }
            } else {
                $nextIndex = 0;
                $prompt = "";
                write("index.php not created");
                readline();
            }
            break;
        default:
            $nextIndex = 1;
            $prompt = "Create {$rootPath}index.php?\nIf you already have an index.php, it will not be overwritten! (Y/n):";
            break;
    }
    return ["index" => $nextIndex, "prompt" => $prompt];
}];


$menus[] = ["id" => 2, "name" => "tests", "description" => "Run Tests", "commandLine" => ["options" => ["run", "verbose"]], "menuCode" => static function ($index, $input, $options) {
    global $rootPath;

    if (!empty($options)) {
        if ($options === "tests:verbose") {
            (new \Tina4\Test($rootPath))->run(false);
        } else {
            (new \Tina4\Test($rootPath))->run();
        }
    } else {
        (new \Tina4\Test($rootPath))->run();
        readline();
    }
    return ["index" => 0, "prompt" => ""];
}];

$menus[] = ["id" => 3, "name" => "database", "description" => "Create database connection", "menuCode" => static function ($index, $input) {

    if ($input === "0") { //Menu Option 0 - Exit
        return ["index" => 0, "prompt" => ""];
    }

    if ($index === 1 && $input === "2") {
        $index = 2; //MySQL
    }

    if ($index === 1 && $input === "3") {
        $index = 3; //Firebird
    }

    switch ($index) {
        case 1: //Sqlite
            $nextIndex = 11;
            $prompt = "Path and name of database (Example: /home/test.db) :";
            break;
        case 11:
            $nextIndex = 12;
            $prompt = "Create database {$input["input"]} (Y/n) ?";
            break;
        case 2: //MySQL
            $nextIndex = 21;
            $prompt = "Hostname (Example: 127.0.0.1) :";
            break;
        case 3: //Firebird
            $nextIndex = 31;
            $prompt = "Hostname (Example: 127.0.0.1) :";
            break;
        default:
            $nextIndex = 1;
            $prompt = "Choose database type:\n";
            $prompt .= "1. Sqlite3 \n";
            $prompt .= "2. MySQL \n";
            $prompt .= "3. Firebird \n";
            $prompt .= "0. Exit \n";
            $prompt .= "Choose:";
            break;
    }
    return ["index" => $nextIndex, "prompt" => $prompt];
}];

/**
 * Menus are created and have a function "menuCode" which takes on the following inputs ($index, $input, $options)
 * The index is handled in a switch statement to parse the input, the menuCode function always should return
 * ["index" => , "prompt" => ], if you want it to end you need to return ["index" => 0, "prompt" => ""];
 *
 * $menus[] = ["id" => 2, "name" => "Do something", "menuCode" => function($index, $input, $options) {
 * return ["index" => 0, "prompt" => ""];
 * }];
 */

/**
 * Draws a menu based on the array above for display to the user
 * @param $menus
 */
function drawMenu($menus)
{
    global $rootPath;
    $menuId = 0;
    $input = "";
    $index = 0;

    while ($input !== "quit") {
        write("\e[H\e[J"); //clear screen
        writeline(str_repeat("=", 100));
        writeline("TINA4 - MENU ({$rootPath})");
        writeline(str_repeat("=", 100));

        if ($menuId !== 0) {
            $found = false;
            foreach ($menus as $mid => $menu) {
                if ($menuId === $menu["id"]) {
                    $prompt = call_user_func($menu["menuCode"], $index, $input, null);
                    $index = $prompt["index"];
                    if ($index === 0) {
                        $menuId = 0;
                    } else {
                        $input = readline($prompt["prompt"]);
                        $found = true;
                    }
                }
            }
            if (!$found) $menuId = 0;
        } else {
            foreach ($menus as $id => $menu) {
                writeline(($menu["id"]) . ".) " . $menu["description"]);
            }
            $input = readline("Choose menu option or type \"quit\" to Exit:");
            $menuId = (int)$input;
        }
    }
}

if (count($argv) === 1) {
    drawMenu($menus);
    echo "\e[H\e[J"; //clear screen
} else {
    //write("\e[H\e[J");
    $options = [];
    $options[] = ["command" => "help", "description" => "Gets the help menu"];
    foreach ($menus as $mid => $menu) {
        if (isset($menu["commandLine"])) {
            foreach ($menu["commandLine"]["options"] as $oid => $option) {
                $options[] = ["command" => $menu["name"] . ":" . $option, "description" => $menu["description"], "function" => $menu["menuCode"]];
            }
        }
    }

    if (isset($argv[1])) {
        writeline("Running: " . $argv[0] . " " . $argv[1]);
    }

    if (strtolower($argv[1]) === "help") {
        writeline("Available options:");
        foreach ($options as $oid => $option) {
            writeline(str_pad($option["command"] . " ", 30, ".", STR_PAD_RIGHT) . $option["description"]);
        }
    } else {

        $found = false;
        foreach ($options as $oid => $option) {
            if ($option["command"] === $argv[1]) {
                call_user_func($option["function"], 0, "", $option["command"]);
            }
        }
    }
}

//End of the console app, say something nice!
$comments[] = "Have a great day!";
$comments[] = "Keep up the good work!";
$comments[] = "You are a star!";
$comments[] = "Nothing is impossible!";
$comments[] = "Keep learning!";

$complimentary = $comments[rand(0, 4)];
writeline("");
echo "Thank you for using Tina4 - {$complimentary}\n";


