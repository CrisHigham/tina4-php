#!/usr/bin/env php
<?php
require_once "vendor/autoload.php";
global $rootPath;
list($rootPath) = get_included_files();
$rootPath = str_replace("bin".DIRECTORY_SEPARATOR."tina4", "", $rootPath);
define("TINA4_SUPPRESS", true);
if (file_exists($rootPath.DIRECTORY_SEPARATOR."index.php")) {
    include $rootPath.DIRECTORY_SEPARATOR."index.php";
}

function writeline($output): void
{
    echo $output."\n";
}

function write($output):void
{
    echo $output;
}


$menus[] = ["id" => 1, "name" => "Run Tests", "menuCode" => static function($index, $input) {
    (new \Tina4\Test())->run();

    readline();
    return ["index" => 0, "prompt" => ""];
}];


$menus[] = ["id" => 2, "name" => "Initialize project", "menuCode" => static function($index, $input) {
    global $rootPath;
    if ($input === "0") { //Menu Option 0 - Exit
        return ["index" => 0, "prompt" => ""];
    }
    switch ($index) {
        case 1:
              if ($input === "" || strtolower($input) === "y") {
                  if (!file_exists($rootPath.DIRECTORY_SEPARATOR."index.php")) {
                      $nextIndex = 0;
                      $prompt = "";
                      $indexContent = '<?php'.PHP_EOL.'require_once "./vendor/autoload.php";'.PHP_EOL.'$config = new \Tina4\Config();'.PHP_EOL.'echo new \Tina4\Tina4Php($config);';
                      file_put_contents($rootPath.DIRECTORY_SEPARATOR."index.php", $indexContent);
                  } else {
                      $nextIndex = 0;
                      $prompt = "";
                      write("index.php file already exists, please make a backup of it or remove it to try again");
                      readline();
                  }
              } else {
                  $nextIndex = 0;
                  $prompt = "";
                  write("index.php not created");
                  readline();
              }
            break;
        default:
                $nextIndex = 1;
                $prompt = "Create {$rootPath}index.php?\nIf you already have an index.php, it will not be overwritten! (Y/n):";
            break;
    }
    return ["index" => $nextIndex, "prompt" => $prompt];
}];

$menus[] = ["id" => 3, "name" => "Create database connection", "menuCode" => static function ($index, $input) {

    if ($input === "0") { //Menu Option 0 - Exit
        return ["index" => 0, "prompt" => ""];
    }

    if ($index === 1 && $input === "2") {
        $index = 2; //MySQL
    }

    if ($index === 1 && $input === "3") {
        $index = 3; //Firebird
    }

    switch ($index) {
        case 1: //Sqlite
            $nextIndex = 11;
            $prompt = "Path and name of database (Example: /home/test.db) :";
            break;
        case 11:
            $nextIndex = 12;
            $prompt = "Create database {$input["input"]} (Y/n) ?";
            break;
        case 2: //MySQL
            $nextIndex = 21;
            $prompt = "Hostname (Example: 127.0.0.1) :";
            break;
        case 3: //Firebird
            $nextIndex = 31;
            $prompt = "Hostname (Example: 127.0.0.1) :";
            break;
        default:
            $nextIndex = 1;
            $prompt = "Choose database type:\n";
            $prompt .= "1. Sqlite3 \n";
            $prompt .= "2. MySQL \n";
            $prompt .= "3. Firebird \n";
            $prompt .= "0. Exit \n";
            $prompt .= "Choose:";
            break;
    }
    return ["index" => $nextIndex, "prompt" => $prompt];
}];

/**
 * Menus are created and have a function "menuCode" which takes on the following inputs ($index, $input)
 * The index is handled in a switch statement to parse the input, the menuCode function always should return
 * ["index" => , "prompt" => ], if you want it to end you need to return ["index" => 0, "prompt" => ""];

$menus[] = ["id" => 2, "name" => "Do something", "menuCode" => function($index, $input) {
    return ["index" => 0, "prompt" => ""];
}];
*/

/**
 * Draws a menu based on the array above for display to the user
 * @param $menus
 */
function drawMenu($menus)
{
    global $rootPath;
    $menuId = 0;
    $input = "";
    $index = 0;

    while ($input !== "quit") {
        write ( "\e[H\e[J"); //clear screen
        writeline ( str_repeat("=", 100) );
        writeline ( "TINA4 - MENU ({$rootPath})");
        writeline ( str_repeat("=", 100) );

        if ($menuId !== 0) {
            $found = false;
            foreach ($menus as $mid => $menu) {
                if ($menuId === $menu["id"]) {
                    $prompt = call_user_func($menu["menuCode"], $index, $input);
                    $index = $prompt["index"];
                    if ($index === 0) {
                        $menuId = 0;
                    } else {
                        $input = readline($prompt["prompt"]);
                        $found = true;
                    }
                }
            }
            if (!$found) $menuId = 0;
        } else {
            foreach ($menus as $id => $menu) {
                writeline (($menu["id"]).".) ".$menu["name"]);
            }
            $input = readline("Choose menu option or type \"quit\" to Exit:");
            $menuId = (int)$input;
        }
    }
}


drawMenu($menus);

//End of the console app, say something nice!
echo "\e[H\e[J"; //clear screen
$comments[] = "Have a great day!";
$comments[] = "Keep up the good work!";
$comments[] = "You are a star!";
$comments[] = "Nothing is impossible!";
$comments[] = "Keep learning!";

$complimentary = $comments[rand(0, 4)];
echo "Thank you for using Tina4 - {$complimentary}\n";


